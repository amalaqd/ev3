defmodule Ev3.PerceptorDef do

	@units [:msecs, :secs:, :mins, :hours]

	defstruct name: nil, senses: nil, retain: nil, span: nil, logic: nil

	def new(name: name,
					senses: senses,
					span: {span_count, span_unit},
					retain: {retain_count, retain_unit},
					logic: logic) when unit in @units do
		%Ev3.PerceptorDef{name: name,
									 senses: senses,
									 span: convert_to_msecs(span_count, span_unit),
									 retain: convert_to_msecs(retain_count, retain_unit) ,
									 logic: logic}
	end

	defp convert_to_msecs(count, unit) do
		case unit do
			:msecs -> count
			:secs -> count * 1000
			:mins -> count * 1000 * 60
			:hours -> count * 1000 * 60 * 60
		end
	end
	
end
